{"version":3,"sources":["webpack:///./src/components/UI/modal.js","webpack:///./src/pages/designs.js"],"names":["closeSvg","className","xmlns","viewBox","fill","d","Modal","props","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","style","backgroundColor","onClick","close","children","ImagesContainer","title","images","map","node","sources","childImageSharp","mobile","media","tablet","desktop","setActiveId","id","setShowModal","key","fixed","alt","Designs","carouselElements","data","allImages","edges","carouselElementIds","Object","keys","useState","activeId","showModal","setSvgWhite","activeIndex","indexOf","elements","elementIds","posterImages","iconImages","query"],"mappings":"gUAKMA,G,UACJ,yBAAKC,UAAU,aAAaC,MAAM,6BAA6BC,QAAQ,sBAAsBC,KAAK,SAChG,0BACEC,EAAE,udAsCOC,EA7BD,SAAAC,GACZ,OACE,kBAACC,EAAA,EAAD,CACEC,GAAIF,EAAMG,KACVC,QAAS,IACTC,WAAW,OACXC,cAAY,EACZC,eAAa,GAEb,yBACEb,UAAU,mDACVc,MAAO,CAAEC,gBAAiB,oBAE1B,4BAAQC,QAASV,EAAMW,MAAOjB,UAAU,oCACrCD,GAEH,yBAAKC,UAAU,8EACZM,EAAMY,aC1BXC,EAAkB,SAAAb,GACtB,OACE,yBAAKN,UAAU,QACb,wBAAIA,UAAU,sDACXM,EAAMc,OAET,kBAAC,IAAD,CAAWpB,UAAU,mDAClBM,EAAMe,OAAOC,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACbC,EAAU,CAAC,OAAD,wBAETD,EAAKE,gBAAgBC,QAFZ,IAGZC,MAAM,sBAHM,+BAMTJ,EAAKE,gBAAgBG,QANZ,IAOZD,MAAM,0CAPM,+BAUTJ,EAAKE,gBAAgBI,SAVZ,IAWZF,MAAM,wBAGV,OACE,4BACEX,QAAS,WACPV,EAAMwB,YAAYP,EAAKQ,IACvBzB,EAAM0B,cAAa,KAGrB,kBAAC,IAAD,CACEC,IAAKV,EAAKQ,GACVG,MAAOV,EACPW,IAAI,GACJnC,UAAU,8HAUX,SAASoC,EAAQ9B,GAC9B,IAAM+B,EAAmB,GACzB/B,EAAMgC,KAAKC,UAAUC,MAAMlB,KAAI,YAAe,IAAZC,EAAW,EAAXA,KAC1BC,EAAU,CAAC,OAAD,wBAETD,EAAKE,gBAAgBC,QAFZ,IAGZC,MAAM,sBAHM,+BAMTJ,EAAKE,gBAAgBI,SANZ,IAOZF,MAAM,uBAIV,OADAU,EAAiBd,EAAKQ,IAAM,kBAAC,IAAD,CAAKG,MAAOV,EAASS,IAAKV,EAAKQ,KACpD,QAET,IAAMU,EAAqBC,OAAOC,KAAKN,GAhBF,EAiBLO,mBAASH,EAAmB,IAArDI,EAjB8B,KAiBpBf,EAjBoB,OAmBHc,oBAAS,GAApCE,EAnB8B,KAmBnBd,EAnBmB,KAqBrC,OACE,kBAAC,IAAD,CAAQe,aAAW,GACjB,kBAAC,EAAD,CAAOtC,KAAMqC,EAAW7B,MAAO,kBAAMe,GAAa,KAChD,kBAAC,IAAD,CACEgB,YAAaP,EAAmBQ,QAAQJ,GACxCK,SAAUb,EACVc,WAAYV,KAGhB,kBAAC,EAAD,CACEV,GAAG,gBACHX,MAAM,iBACNC,OAAQf,EAAMgC,KAAKc,aAAaZ,MAChCV,YAAaA,EACbE,aAAcA,IAEhB,kBAAC,EAAD,CACED,GAAG,cACHX,MAAM,eACNC,OAAQf,EAAMgC,KAAKe,WAAWb,MAC9BV,YAAaA,EACbE,aAAcA,KAMf,IAAMsB,EAAK","file":"component---src-pages-designs-js-d904b28047c4f8adb088.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { CSSTransition } from \"react-transition-group\"\r\nimport \"./animations.css\"\r\n\r\nconst closeSvg = (\r\n  <svg className=\"lg:w-5 w-3\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 409.806 409.806\" fill=\"white\">\r\n    <path\r\n      d=\"M228.929,205.01L404.596,29.343c6.78-6.548,6.968-17.352,0.42-24.132c-6.548-6.78-17.352-6.968-24.132-0.42\r\n\t\t\tc-0.142,0.137-0.282,0.277-0.42,0.42L204.796,180.878L29.129,5.21c-6.78-6.548-17.584-6.36-24.132,0.42\r\n\t\t\tc-6.388,6.614-6.388,17.099,0,23.713L180.664,205.01L4.997,380.677c-6.663,6.664-6.663,17.468,0,24.132\r\n\t\t\tc6.664,6.662,17.468,6.662,24.132,0l175.667-175.667l175.667,175.667c6.78,6.548,17.584,6.36,24.132-0.42\r\n\t\t\tc6.387-6.614,6.387-17.099,0-23.712L228.929,205.01z\"\r\n    />\r\n  </svg>\r\n)\r\n\r\nconst Modal = props => {\r\n  return (\r\n    <CSSTransition\r\n      in={props.show}\r\n      timeout={200}\r\n      classNames=\"fade\"\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <div\r\n        className=\"flex flex-col fixed w-screen h-screen z-40 top-0\"\r\n        style={{ backgroundColor: \"rgba(0,0,0,0.9)\" }}\r\n      >\r\n        <button onClick={props.close} className=\"self-end p-2 bg-black md:m-4 m-2\">\r\n          {closeSvg}\r\n        </button>\r\n        <div className=\"top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 absolute z-50\">\r\n          {props.children}\r\n        </div>\r\n      </div>\r\n    </CSSTransition>\r\n  )\r\n}\r\n\r\nModal.propTypes = {\r\n  show: PropTypes.bool,\r\n  close: PropTypes.func,\r\n}\r\n\r\nexport default Modal\r\n","import React, { useState } from \"react\"\r\nimport Layout from \"../HOC/layout\"\r\nimport { graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\nimport Container from \"../components/container\"\r\nimport Carousel from \"../components/UI/carousel\"\r\nimport Modal from \"../components/UI/modal\"\r\n\r\nconst ImagesContainer = props => {\r\n  return (\r\n    <div className=\"my-8\">\r\n      <h1 className=\"text-blue-x font-black capitalize mt-4 text-center\">\r\n        {props.title}\r\n      </h1>\r\n      <Container className=\"flex items-center justify-center flex-wrap py-8\">\r\n        {props.images.map(({ node }) => {\r\n          const sources = [\r\n            {\r\n              ...node.childImageSharp.mobile,\r\n              media: `(max-width:767px)`,\r\n            },\r\n            {\r\n              ...node.childImageSharp.tablet,\r\n              media: `(min-width:768px && max-width:1023px)`,\r\n            },\r\n            {\r\n              ...node.childImageSharp.desktop,\r\n              media: `(min-width:1024px)`,\r\n            },\r\n          ]\r\n          return (\r\n            <button\r\n              onClick={() => {\r\n                props.setActiveId(node.id)\r\n                props.setShowModal(true)\r\n              }}\r\n            >\r\n              <Img\r\n                key={node.id}\r\n                fixed={sources}\r\n                alt=\"\"\r\n                className=\"rounded shadow-sm hover:shadow-lg transition-all ease-out duration-200 transform hover:scale-105 lg:m-4 md:m-2 m-1\"\r\n              />\r\n            </button>\r\n          )\r\n        })}\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default function Designs(props) {\r\n  const carouselElements = []\r\n  props.data.allImages.edges.map(({ node }) => {\r\n    const sources = [\r\n      {\r\n        ...node.childImageSharp.mobile,\r\n        media: `(max-width:767px)`,\r\n      },\r\n      {\r\n        ...node.childImageSharp.desktop,\r\n        media: `(min-width:768px)`,\r\n      },\r\n    ]\r\n    carouselElements[node.id] = <Img fixed={sources} key={node.id} />\r\n    return null\r\n  })\r\n  const carouselElementIds = Object.keys(carouselElements)\r\n  const [activeId, setActiveId] = useState(carouselElementIds[0])\r\n\r\n  const [showModal, setShowModal] = useState(false)\r\n\r\n  return (\r\n    <Layout setSvgWhite>\r\n      <Modal show={showModal} close={() => setShowModal(false)}>\r\n        <Carousel\r\n          activeIndex={carouselElementIds.indexOf(activeId)}\r\n          elements={carouselElements}\r\n          elementIds={carouselElementIds}\r\n        />\r\n      </Modal>\r\n      <ImagesContainer\r\n        id=\"posterDesigns\"\r\n        title=\"poster designs\"\r\n        images={props.data.posterImages.edges}\r\n        setActiveId={setActiveId}\r\n        setShowModal={setShowModal}\r\n      />\r\n      <ImagesContainer\r\n        id=\"iconDesigns\"\r\n        title=\"icon designs\"\r\n        images={props.data.iconImages.edges}\r\n        setActiveId={setActiveId}\r\n        setShowModal={setShowModal}\r\n      />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    posterImages: allFile(filter: { sourceInstanceName: { eq: \"posters\" } }) {\r\n      edges {\r\n        node {\r\n          id\r\n          childImageSharp {\r\n            desktop: fixed(fit: COVER, height: 250, width: 250, quality: 100) {\r\n              ...GatsbyImageSharpFixed\r\n            }\r\n            tablet: fixed(fit: COVER, height: 200, width: 200, quality: 100) {\r\n              ...GatsbyImageSharpFixed\r\n            }\r\n            mobile: fixed(fit: COVER, height: 150, width: 150, quality: 100) {\r\n              ...GatsbyImageSharpFixed\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    iconImages: allFile(filter: { sourceInstanceName: { eq: \"icons\" } }) {\r\n      edges {\r\n        node {\r\n          id\r\n          childImageSharp {\r\n            desktop: fixed(fit: COVER, width: 250, quality: 100) {\r\n              ...GatsbyImageSharpFixed\r\n            }\r\n            tablet: fixed(fit: COVER, width: 200, quality: 100) {\r\n              ...GatsbyImageSharpFixed\r\n            }\r\n            mobile: fixed(fit: COVER, width: 150, quality: 100) {\r\n              ...GatsbyImageSharpFixed\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    allImages: allFile(\r\n      filter: { sourceInstanceName: { in: [\"posters\", \"icons\"] } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          childImageSharp {\r\n            desktop: fixed(\r\n              fit: CONTAIN\r\n              width: 600\r\n              height: 600\r\n              quality: 100\r\n              background: \"rgba(0,0,0,0)\"\r\n            ) {\r\n              ...GatsbyImageSharpFixed\r\n            }\r\n            mobile: fixed(\r\n              fit: CONTAIN\r\n              width: 300\r\n              height: 300\r\n              quality: 100\r\n              background: \"transparent\"\r\n            ) {\r\n              ...GatsbyImageSharpFixed\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}